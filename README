Starting Forth
Leo Brodie

Chapter 0 Introductions

human -> machine
puppeteer -> wooden control -> strings -> marionette
programmer -> high-level languages -> machine languages -> computer

Forth is
  a high-level language
  an assembly language
  an operating system
  a set of development tools
  a software design philosophy

Forth is
  fast
  compact
  transportable
  productive

Chapter 1 Fundamental Forth

( Large letter F )
 : STAR 42 EMIT ;
 : STARS   0 DO  STAR  LOOP ;
 : MARGIN  CR 30 SPACES ;
 : BLIP MARGIN STAR ;
 : BAR  MARGIN 5 STARS ;
 : F    BAR BLIP BAR BLIP BLIP CR ;

Word name consists any character except
   return
   backspace
   space

: xxxx yyy ; ( -- )           Creates a new definition with the name xxx, consisting of word or words yyy.
CR           ( -- )           Performs a carriage return and line feed at your terminal.
SPACES       ( n -- )         Prints the given number of blank spaces at your terminal.
SPACE        ( -- )           Prints one blank space at your terminal.
EMIT         ( c -- )         Transmits a character to the output device.
." xxx"      ( -- )           Prints the character string xxx at your terminal. The " character terminates the string.
+            ( n1 n2 -- sum ) Adds.
.            ( n -- )         Prints a number, followed by one space.

Review of Terms
  Compile
  Dictionary
  Execuate
  Extensibility
  Glossary
  Infix notation
  Input stream
  Interpret
  LIFO
  Postfix notation
  Stack
  Stack overflow
  Stack underflow
  Word

Chapter 2 How to Get Results

Integer-arithmetic operators
  + ( n1 n2 -- sum )  Adds.
  - ( n1 n2 -- diff ) Subtracts (n1-n2).
  * ( n1 n2 -- prod ) Multiplies.
  / ( n1 n2 -- quot ) Divides (n1/n2).

To convert to postfix, simply move the operator to the end of the expression.

Division operators
  /MOD ( n1 n2 -- rem quot ) Divides. Returns the remainder and quotient.
  MOD ( n1 n2 -- rem ) Returns the remainder from division.

Stack manipulation operators
  SWAP ( n1 n2 -- n2 n1 ) Reverses the top two stack items.
  DUP  ( n -- n n ) Duplicates the top stack item.
  OVER ( n1 n2 -- n1 n2 n1 ) Makes a copy of the second item and pushes it on top.
  ROT  ( n1 n2 n3 -- n2 n3 n1 ) Rotates the third item to the top.
  DROP ( n -- ) Discards the top stack item.

When writing equations in Forth, it's best to "factor them out" first.

Double
  2SWAP ( d1 d2 -- d2 d1 ) Reverses the top two pairs of numbers.
  2DUP  ( d -- d d ) Duplicates the top pair of numbers.
  2OVER ( d1 d2 -- d1 d2 d1 ) Makes a copy of the second pair of numbers and pushes it on top.
  2DROP ( d -- ) Discards the top pair of numbers.

Review of Terms
  Double-length numbers
  Single-length numbers

Chapter 3 The Editor (and Staff)

You can define the same word more than once in different ways â€” only the most recent definition will be executed.

USE xxx          ( -- ) Designate OS text file xxx as the "Forth disk."
LIST             ( n -- ) Lists a disk block.
LOAD             ( n -- ) Loads a disk block (compiles or executes).
( xxx)           ( -- ) Causes the string xxx to be ignored by the text interpreter. The character ) is the delimiter.
UPDATE           ( -- ) Marks the most recently referenced block as modified. The block will later be automatically transferred
                        to mass storage if its buffer is needed to store a different block or if FLUSH is executed.
EMPTY-BUFFERS    ( -- ) Marks all block buffers as empty without necessarily affecting their actual contents.
                        Updated blocks are not written to mass storage.
BLOCK            ( u -- addr ) Leaves the address of the first byte in block u. If the block is not already in memory,
                               it is transferred from mass storage into whichever memory buffer has been least recently accessed.
                               If the block occupying that buffer has been updated (i.e., modified), it is rewritten onto
                               mass storage before block u is read into the buffer.
INCLUDE xxx      ( -- ) Load the text file xxx (compiles or executes).
FORGET xxx       ( -- ) Forgets all definitions back to and including xxx.
MARKER xxx       ( -- ) Creates a word xxx which, when executed, restores the dictionary to the state it had just prior to
                        the definition of xxx. In particular, remove xxx and all subsequent word definitions.

Review of Terms
  Block
  Buffer
  Null definition
  Pointer
  Source text
